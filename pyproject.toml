[project]
name = "petrelpy"
version = "0.2.0"
description = "Utilities for working with Petrel imports and exports."
authors = [{ name = "Frank Male", email = "frank.male@psu.edu" }]
license = { file = "LICENSE" }
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
  "click",
  "dask[dataframe,diagnostics]",
  "fastparquet",
  "numpy",
  "openpyxl",
  "pandas",
  "scipy",
  "trogon",
]

[project.optional-dependencies]
dev = ["ipykernel >=6.0.0"]
docs = [
  "furo",
  "jupytext >=1.14",
  "myst-nb >=0.13.1",
  "myst-parser",
  "sphinx >=5.0.2",
  "sphinx-autoapi >=1.8.4",
  "sphinx-copybutton",
  "sphinx-design",
  "sphinx-sitemap",
  "sphinx-external-toc",
]
test = [
  "pytest >=6.2",
  "pytest-cov >=2.12.1",
  "pytest-mpl >=0.16",
  "pytest-xdist >=2.4",
]

[project.scripts]
petrelpy = "petrelpy.cli:cli"

[build-system]
requires = ["hatchling>=0.7"]
build-backend = "hatchling.build"

[tool.check-manifest]
ignore = [".ruff_cache/**"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "@jit",
  "@njit",
  "raise NotImplementedError",
]
[tool.coverage.run]
source = ["src/petrelpy"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
  "--cov=petrelpy",
  "--cov-append",
  "--cov-report=xml",
  "--cov-config=pyproject.toml",
]
testpaths = ["tests"]

[tool.ruff]
exclude = ["docs/"]
select = [
  "E",
  "F",
  "W",    # flake8
  "B",
  "B904", # flake8-bugbear
  "D",    # pydocstyle
  "I",    # isort
  "N",    # pep8-naming
  "S",    # flake8-bandit
  "ARG",  # flake8-unused-arguments
  "C4",   # flake8-comprehensions
  "EM",   # flake8-errmsg
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "PD",   # pandas-vet
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PLE",  # Error
  "PLW",  # Warning
  "PT",   # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "TID",  # flake8-tidy-imports
  "UP",   # pyupgrade
  "YTT",  # flake8-2020
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "PT004",  # Use underscore for non-returning fixture (use usefixture instead)
  "RET504", # 'unnecessary' variable assignment before return statement
  "D203",   # no-blank-line-before-class
  "D407",   # Missing dashed underline after section
  "D409",
  "D213",
  "D406",
  "S101",   # Using assert
]
line-length = 99
target-version = "py39"
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"noxfile.py" = ["T", "T201"]
"tests/**.py" = ["D101", "D102", "D103"]
